Consumer Interface in Java with Examples:
-----------------------------------------

1. The Consumer Interface is a part of the java.util.function package.
2. The Consumer Interface has been introduced since Java 8.
3. The Consumer Interface to implement functional programming in Java.
4. It represents a function which takes in one argument and produces a result.
5. The Consumer Interface functions don’t return any value.

   Hence this functional interface which takes in one generic namely:-

-> T: denotes the type of the input argument to the operation

The lambda expression assigned to an object of Consumer type is used to define its accept() which eventually applies the given operation on its argument.
Consumers are useful when it not needed to return any value as they are expected to operate via side-effects.



Functions in Consumer Interface:
-------------------------------

The Consumer interface consists of the following two functions:

1. accept()

This method accepts one value and performs the operation on the given argument
Syntax:
-------

void accept(T t) // t is denoted the type of the input argument


Parameters: This method takes in one parameter:

t– the input argument
Returns: This method does not return any value.


Example:

Consumer<Integer> display = a -> System.out.println(a);


2. andThen()

It returns a composed Consumer wherein the parameterized Consumer will be executed after the first one. If evaluation of either function throws an error, it is relayed to the caller of the composed operation.
Note: The function being passed as the argument should be of type Consumer.
Syntax:
-------

default Consumer <T>
        andThen(Consumer<? super T> after)

